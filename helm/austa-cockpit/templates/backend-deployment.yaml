apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "austa-cockpit.fullname" . }}-backend
  labels:
    {{- include "austa-cockpit.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "austa-cockpit.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "austa-cockpit.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "austa-cockpit.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: db-migration
          image: "{{ .Values.backend.image.registry }}/{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          command: ['npx', 'prisma', 'migrate', 'deploy']
          env:
            {{- toYaml .Values.backend.env | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      containers:
        - name: backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.registry }}/{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.targetPort }}
              protocol: TCP
          env:
            {{- toYaml .Values.backend.env | nindent 12 }}
          {{- if .Values.backend.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.backend.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
          {{- end }}
          startupProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          volumeMounts:
            - name: temp-volume
              mountPath: /tmp
            - name: uploads
              mountPath: /app/uploads
      volumes:
        - name: temp-volume
          emptyDir: {}
        - name: uploads
          emptyDir:
            sizeLimit: 1Gi
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}