version: '3.8'

services:
  ai-service:
    build: .
    container_name: austa-ai-service
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/austa_ai
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./:/app
      - ai-models:/app/models
    depends_on:
      - postgres
      - redis
    networks:
      - austa-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: austa-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=austa_ai
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - austa-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: austa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - austa-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: austa-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - austa-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: austa-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - austa-network
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data:
  ai-models:

networks:
  austa-network:
    driver: bridge