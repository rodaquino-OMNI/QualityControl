# Backend Dockerfile - Optimized for faster builds
FROM node:20-alpine AS base

# Install system dependencies once
RUN apk add --no-cache python3 make g++ curl

# Set working directory
WORKDIR /app

# Copy package files first for better layer caching
COPY backend/package*.json ./

# Install dependencies with npm ci for reproducible builds
RUN npm ci --no-audit --no-fund --verbose

# Development stage (for debugging)
FROM base AS development
COPY backend/ ./
EXPOSE 3000
CMD ["npm", "run", "dev"]

# Build stage
FROM base AS builder
COPY backend/ ./

# Use our optimized build script that skips strict type checking
RUN npm run build:skip-types

# Production stage
FROM node:20-alpine AS production

# Install curl for health checks
RUN apk add --no-cache curl

WORKDIR /app

# Copy package files and install production dependencies
COPY backend/package*.json ./
RUN npm ci --only=production --no-audit --no-fund

# Copy built application
COPY --from=builder /app/dist ./dist

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 && \
    chown -R nodejs:nodejs /app

USER nodejs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

EXPOSE 3000

# Start application
CMD ["node", "dist/index.js"]